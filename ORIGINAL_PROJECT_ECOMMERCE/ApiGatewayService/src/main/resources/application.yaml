server:
  port: 9090

spring:
  application:
    name: API-GATEWAY

  config:
    import: configserver:http://${CONFIG_SERVER_URL:localhost}:9296

  cloud:
    gateway:
      routes:
        - id : ORDER-SERVICE
          uri: lb://ORDER-SERVICE   #lb load balancer in order service
          predicates:
            - Path=/order/**
          filters:
            - name: CircuitBreaker
              args:
                name: ORDER-SERVICE
                fallbackuri: forward:/orderServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1

        - id : PRODUCT-SERVICE
          uri: lb://PRODUCT-SERVICE   #lb load balancer
          predicates:
            - Path=/product/**
          filters:
            - name: CircuitBreaker
              args:
                name: PRODUCT-SERVICE
                fallbackuri: forward:/productServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1 # how many request allow per sec
                redis-rate-limiter.burstCapacity: 1 #how many request allow that many 1 sec
        - id : PAYMENT-SERVICE
          uri: lb://PAYMENT-SERVICE   #lb load balancer
          predicates:
            - Path=/payment/**
          filters:
            - name: CircuitBreaker
              args:
                name: PAYMENT-SERVICE
                fallbackuri: forward:/paymentServiceFallBack

            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1

#  security:
#    oauth2:
#      client:
#        registration:
#          auth0:
#            authorization-uri: https://dev-75iqf6oxavy2f1ea.us.auth0.com/authorize
#            client-id: hjhxyeZXw0x9glheeh21Ib5WFCHLQC1H
#            client-secret: -O2FkwURemH7HHRQ2_FVvkbr7gI-pzESiIJ_4eSA6b6smz52r1ZrZTiG2moblZrX
#            scope: openid,email,profile,offline_access,Customer,Admin
#            authorization-grant-type: authorization_code
#            redirect-uri: "{baseUrl}/login/oauth2/code/auth0"
#        provider:
#          auth0:
#            issue-uri: https://dev-75iqf6oxavy2f1ea.us.auth0.com/   #domain
#            jwk-set-uri: https://dev-75iqf6oxavy2f1ea.us.auth0.com/well-known/jwks.json
#
#auth0:
#  audience: https://dev-75iqf6oxavy2f1ea.us.auth0.com/api/v2
##okta:
##  oauth2:
##    issuer: https://dev-35639660.okta.com/oauth2/default
##    audience: api://default
##    client-id: 0oaonk29d1lrYFm2k5d7
##    client-secret: Y8JpkuEZjovvHN_D4JK5u3RagM0p7drklbFS_xHfwusHvr5Ivn0l_NCdD1DFdaKJ
##    scopes: openid, profile, email, offline_access
#
#
#
#
#
